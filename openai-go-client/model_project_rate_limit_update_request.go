/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectRateLimitUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectRateLimitUpdateRequest{}

// ProjectRateLimitUpdateRequest struct for ProjectRateLimitUpdateRequest
type ProjectRateLimitUpdateRequest struct {
	// The maximum requests per minute.
	MaxRequestsPer1Minute *int32 `json:"max_requests_per_1_minute,omitempty"`
	// The maximum tokens per minute.
	MaxTokensPer1Minute *int32 `json:"max_tokens_per_1_minute,omitempty"`
	// The maximum images per minute. Only relevant for certain models.
	MaxImagesPer1Minute *int32 `json:"max_images_per_1_minute,omitempty"`
	// The maximum audio megabytes per minute. Only relevant for certain models.
	MaxAudioMegabytesPer1Minute *int32 `json:"max_audio_megabytes_per_1_minute,omitempty"`
	// The maximum requests per day. Only relevant for certain models.
	MaxRequestsPer1Day *int32 `json:"max_requests_per_1_day,omitempty"`
	// The maximum batch input tokens per day. Only relevant for certain models.
	Batch1DayMaxInputTokens *int32 `json:"batch_1_day_max_input_tokens,omitempty"`
}

// NewProjectRateLimitUpdateRequest instantiates a new ProjectRateLimitUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectRateLimitUpdateRequest() *ProjectRateLimitUpdateRequest {
	this := ProjectRateLimitUpdateRequest{}
	return &this
}

// NewProjectRateLimitUpdateRequestWithDefaults instantiates a new ProjectRateLimitUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectRateLimitUpdateRequestWithDefaults() *ProjectRateLimitUpdateRequest {
	this := ProjectRateLimitUpdateRequest{}
	return &this
}

// GetMaxRequestsPer1Minute returns the MaxRequestsPer1Minute field value if set, zero value otherwise.
func (o *ProjectRateLimitUpdateRequest) GetMaxRequestsPer1Minute() int32 {
	if o == nil || IsNil(o.MaxRequestsPer1Minute) {
		var ret int32
		return ret
	}
	return *o.MaxRequestsPer1Minute
}

// GetMaxRequestsPer1MinuteOk returns a tuple with the MaxRequestsPer1Minute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRateLimitUpdateRequest) GetMaxRequestsPer1MinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRequestsPer1Minute) {
		return nil, false
	}
	return o.MaxRequestsPer1Minute, true
}

// HasMaxRequestsPer1Minute returns a boolean if a field has been set.
func (o *ProjectRateLimitUpdateRequest) HasMaxRequestsPer1Minute() bool {
	if o != nil && !IsNil(o.MaxRequestsPer1Minute) {
		return true
	}

	return false
}

// SetMaxRequestsPer1Minute gets a reference to the given int32 and assigns it to the MaxRequestsPer1Minute field.
func (o *ProjectRateLimitUpdateRequest) SetMaxRequestsPer1Minute(v int32) {
	o.MaxRequestsPer1Minute = &v
}

// GetMaxTokensPer1Minute returns the MaxTokensPer1Minute field value if set, zero value otherwise.
func (o *ProjectRateLimitUpdateRequest) GetMaxTokensPer1Minute() int32 {
	if o == nil || IsNil(o.MaxTokensPer1Minute) {
		var ret int32
		return ret
	}
	return *o.MaxTokensPer1Minute
}

// GetMaxTokensPer1MinuteOk returns a tuple with the MaxTokensPer1Minute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRateLimitUpdateRequest) GetMaxTokensPer1MinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTokensPer1Minute) {
		return nil, false
	}
	return o.MaxTokensPer1Minute, true
}

// HasMaxTokensPer1Minute returns a boolean if a field has been set.
func (o *ProjectRateLimitUpdateRequest) HasMaxTokensPer1Minute() bool {
	if o != nil && !IsNil(o.MaxTokensPer1Minute) {
		return true
	}

	return false
}

// SetMaxTokensPer1Minute gets a reference to the given int32 and assigns it to the MaxTokensPer1Minute field.
func (o *ProjectRateLimitUpdateRequest) SetMaxTokensPer1Minute(v int32) {
	o.MaxTokensPer1Minute = &v
}

// GetMaxImagesPer1Minute returns the MaxImagesPer1Minute field value if set, zero value otherwise.
func (o *ProjectRateLimitUpdateRequest) GetMaxImagesPer1Minute() int32 {
	if o == nil || IsNil(o.MaxImagesPer1Minute) {
		var ret int32
		return ret
	}
	return *o.MaxImagesPer1Minute
}

// GetMaxImagesPer1MinuteOk returns a tuple with the MaxImagesPer1Minute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRateLimitUpdateRequest) GetMaxImagesPer1MinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxImagesPer1Minute) {
		return nil, false
	}
	return o.MaxImagesPer1Minute, true
}

// HasMaxImagesPer1Minute returns a boolean if a field has been set.
func (o *ProjectRateLimitUpdateRequest) HasMaxImagesPer1Minute() bool {
	if o != nil && !IsNil(o.MaxImagesPer1Minute) {
		return true
	}

	return false
}

// SetMaxImagesPer1Minute gets a reference to the given int32 and assigns it to the MaxImagesPer1Minute field.
func (o *ProjectRateLimitUpdateRequest) SetMaxImagesPer1Minute(v int32) {
	o.MaxImagesPer1Minute = &v
}

// GetMaxAudioMegabytesPer1Minute returns the MaxAudioMegabytesPer1Minute field value if set, zero value otherwise.
func (o *ProjectRateLimitUpdateRequest) GetMaxAudioMegabytesPer1Minute() int32 {
	if o == nil || IsNil(o.MaxAudioMegabytesPer1Minute) {
		var ret int32
		return ret
	}
	return *o.MaxAudioMegabytesPer1Minute
}

// GetMaxAudioMegabytesPer1MinuteOk returns a tuple with the MaxAudioMegabytesPer1Minute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRateLimitUpdateRequest) GetMaxAudioMegabytesPer1MinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxAudioMegabytesPer1Minute) {
		return nil, false
	}
	return o.MaxAudioMegabytesPer1Minute, true
}

// HasMaxAudioMegabytesPer1Minute returns a boolean if a field has been set.
func (o *ProjectRateLimitUpdateRequest) HasMaxAudioMegabytesPer1Minute() bool {
	if o != nil && !IsNil(o.MaxAudioMegabytesPer1Minute) {
		return true
	}

	return false
}

// SetMaxAudioMegabytesPer1Minute gets a reference to the given int32 and assigns it to the MaxAudioMegabytesPer1Minute field.
func (o *ProjectRateLimitUpdateRequest) SetMaxAudioMegabytesPer1Minute(v int32) {
	o.MaxAudioMegabytesPer1Minute = &v
}

// GetMaxRequestsPer1Day returns the MaxRequestsPer1Day field value if set, zero value otherwise.
func (o *ProjectRateLimitUpdateRequest) GetMaxRequestsPer1Day() int32 {
	if o == nil || IsNil(o.MaxRequestsPer1Day) {
		var ret int32
		return ret
	}
	return *o.MaxRequestsPer1Day
}

// GetMaxRequestsPer1DayOk returns a tuple with the MaxRequestsPer1Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRateLimitUpdateRequest) GetMaxRequestsPer1DayOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRequestsPer1Day) {
		return nil, false
	}
	return o.MaxRequestsPer1Day, true
}

// HasMaxRequestsPer1Day returns a boolean if a field has been set.
func (o *ProjectRateLimitUpdateRequest) HasMaxRequestsPer1Day() bool {
	if o != nil && !IsNil(o.MaxRequestsPer1Day) {
		return true
	}

	return false
}

// SetMaxRequestsPer1Day gets a reference to the given int32 and assigns it to the MaxRequestsPer1Day field.
func (o *ProjectRateLimitUpdateRequest) SetMaxRequestsPer1Day(v int32) {
	o.MaxRequestsPer1Day = &v
}

// GetBatch1DayMaxInputTokens returns the Batch1DayMaxInputTokens field value if set, zero value otherwise.
func (o *ProjectRateLimitUpdateRequest) GetBatch1DayMaxInputTokens() int32 {
	if o == nil || IsNil(o.Batch1DayMaxInputTokens) {
		var ret int32
		return ret
	}
	return *o.Batch1DayMaxInputTokens
}

// GetBatch1DayMaxInputTokensOk returns a tuple with the Batch1DayMaxInputTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRateLimitUpdateRequest) GetBatch1DayMaxInputTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.Batch1DayMaxInputTokens) {
		return nil, false
	}
	return o.Batch1DayMaxInputTokens, true
}

// HasBatch1DayMaxInputTokens returns a boolean if a field has been set.
func (o *ProjectRateLimitUpdateRequest) HasBatch1DayMaxInputTokens() bool {
	if o != nil && !IsNil(o.Batch1DayMaxInputTokens) {
		return true
	}

	return false
}

// SetBatch1DayMaxInputTokens gets a reference to the given int32 and assigns it to the Batch1DayMaxInputTokens field.
func (o *ProjectRateLimitUpdateRequest) SetBatch1DayMaxInputTokens(v int32) {
	o.Batch1DayMaxInputTokens = &v
}

func (o ProjectRateLimitUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectRateLimitUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxRequestsPer1Minute) {
		toSerialize["max_requests_per_1_minute"] = o.MaxRequestsPer1Minute
	}
	if !IsNil(o.MaxTokensPer1Minute) {
		toSerialize["max_tokens_per_1_minute"] = o.MaxTokensPer1Minute
	}
	if !IsNil(o.MaxImagesPer1Minute) {
		toSerialize["max_images_per_1_minute"] = o.MaxImagesPer1Minute
	}
	if !IsNil(o.MaxAudioMegabytesPer1Minute) {
		toSerialize["max_audio_megabytes_per_1_minute"] = o.MaxAudioMegabytesPer1Minute
	}
	if !IsNil(o.MaxRequestsPer1Day) {
		toSerialize["max_requests_per_1_day"] = o.MaxRequestsPer1Day
	}
	if !IsNil(o.Batch1DayMaxInputTokens) {
		toSerialize["batch_1_day_max_input_tokens"] = o.Batch1DayMaxInputTokens
	}
	return toSerialize, nil
}

type NullableProjectRateLimitUpdateRequest struct {
	value *ProjectRateLimitUpdateRequest
	isSet bool
}

func (v NullableProjectRateLimitUpdateRequest) Get() *ProjectRateLimitUpdateRequest {
	return v.value
}

func (v *NullableProjectRateLimitUpdateRequest) Set(val *ProjectRateLimitUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectRateLimitUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectRateLimitUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectRateLimitUpdateRequest(val *ProjectRateLimitUpdateRequest) *NullableProjectRateLimitUpdateRequest {
	return &NullableProjectRateLimitUpdateRequest{value: val, isSet: true}
}

func (v NullableProjectRateLimitUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectRateLimitUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


