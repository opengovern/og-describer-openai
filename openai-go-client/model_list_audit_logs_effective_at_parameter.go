/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListAuditLogsEffectiveAtParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuditLogsEffectiveAtParameter{}

// ListAuditLogsEffectiveAtParameter struct for ListAuditLogsEffectiveAtParameter
type ListAuditLogsEffectiveAtParameter struct {
	// Return only events whose `effective_at` (Unix seconds) is greater than this value.
	Gt *int32 `json:"gt,omitempty"`
	// Return only events whose `effective_at` (Unix seconds) is greater than or equal to this value.
	Gte *int32 `json:"gte,omitempty"`
	// Return only events whose `effective_at` (Unix seconds) is less than this value.
	Lt *int32 `json:"lt,omitempty"`
	// Return only events whose `effective_at` (Unix seconds) is less than or equal to this value.
	Lte *int32 `json:"lte,omitempty"`
}

// NewListAuditLogsEffectiveAtParameter instantiates a new ListAuditLogsEffectiveAtParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuditLogsEffectiveAtParameter() *ListAuditLogsEffectiveAtParameter {
	this := ListAuditLogsEffectiveAtParameter{}
	return &this
}

// NewListAuditLogsEffectiveAtParameterWithDefaults instantiates a new ListAuditLogsEffectiveAtParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuditLogsEffectiveAtParameterWithDefaults() *ListAuditLogsEffectiveAtParameter {
	this := ListAuditLogsEffectiveAtParameter{}
	return &this
}

// GetGt returns the Gt field value if set, zero value otherwise.
func (o *ListAuditLogsEffectiveAtParameter) GetGt() int32 {
	if o == nil || IsNil(o.Gt) {
		var ret int32
		return ret
	}
	return *o.Gt
}

// GetGtOk returns a tuple with the Gt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogsEffectiveAtParameter) GetGtOk() (*int32, bool) {
	if o == nil || IsNil(o.Gt) {
		return nil, false
	}
	return o.Gt, true
}

// HasGt returns a boolean if a field has been set.
func (o *ListAuditLogsEffectiveAtParameter) HasGt() bool {
	if o != nil && !IsNil(o.Gt) {
		return true
	}

	return false
}

// SetGt gets a reference to the given int32 and assigns it to the Gt field.
func (o *ListAuditLogsEffectiveAtParameter) SetGt(v int32) {
	o.Gt = &v
}

// GetGte returns the Gte field value if set, zero value otherwise.
func (o *ListAuditLogsEffectiveAtParameter) GetGte() int32 {
	if o == nil || IsNil(o.Gte) {
		var ret int32
		return ret
	}
	return *o.Gte
}

// GetGteOk returns a tuple with the Gte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogsEffectiveAtParameter) GetGteOk() (*int32, bool) {
	if o == nil || IsNil(o.Gte) {
		return nil, false
	}
	return o.Gte, true
}

// HasGte returns a boolean if a field has been set.
func (o *ListAuditLogsEffectiveAtParameter) HasGte() bool {
	if o != nil && !IsNil(o.Gte) {
		return true
	}

	return false
}

// SetGte gets a reference to the given int32 and assigns it to the Gte field.
func (o *ListAuditLogsEffectiveAtParameter) SetGte(v int32) {
	o.Gte = &v
}

// GetLt returns the Lt field value if set, zero value otherwise.
func (o *ListAuditLogsEffectiveAtParameter) GetLt() int32 {
	if o == nil || IsNil(o.Lt) {
		var ret int32
		return ret
	}
	return *o.Lt
}

// GetLtOk returns a tuple with the Lt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogsEffectiveAtParameter) GetLtOk() (*int32, bool) {
	if o == nil || IsNil(o.Lt) {
		return nil, false
	}
	return o.Lt, true
}

// HasLt returns a boolean if a field has been set.
func (o *ListAuditLogsEffectiveAtParameter) HasLt() bool {
	if o != nil && !IsNil(o.Lt) {
		return true
	}

	return false
}

// SetLt gets a reference to the given int32 and assigns it to the Lt field.
func (o *ListAuditLogsEffectiveAtParameter) SetLt(v int32) {
	o.Lt = &v
}

// GetLte returns the Lte field value if set, zero value otherwise.
func (o *ListAuditLogsEffectiveAtParameter) GetLte() int32 {
	if o == nil || IsNil(o.Lte) {
		var ret int32
		return ret
	}
	return *o.Lte
}

// GetLteOk returns a tuple with the Lte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogsEffectiveAtParameter) GetLteOk() (*int32, bool) {
	if o == nil || IsNil(o.Lte) {
		return nil, false
	}
	return o.Lte, true
}

// HasLte returns a boolean if a field has been set.
func (o *ListAuditLogsEffectiveAtParameter) HasLte() bool {
	if o != nil && !IsNil(o.Lte) {
		return true
	}

	return false
}

// SetLte gets a reference to the given int32 and assigns it to the Lte field.
func (o *ListAuditLogsEffectiveAtParameter) SetLte(v int32) {
	o.Lte = &v
}

func (o ListAuditLogsEffectiveAtParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAuditLogsEffectiveAtParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gt) {
		toSerialize["gt"] = o.Gt
	}
	if !IsNil(o.Gte) {
		toSerialize["gte"] = o.Gte
	}
	if !IsNil(o.Lt) {
		toSerialize["lt"] = o.Lt
	}
	if !IsNil(o.Lte) {
		toSerialize["lte"] = o.Lte
	}
	return toSerialize, nil
}

type NullableListAuditLogsEffectiveAtParameter struct {
	value *ListAuditLogsEffectiveAtParameter
	isSet bool
}

func (v NullableListAuditLogsEffectiveAtParameter) Get() *ListAuditLogsEffectiveAtParameter {
	return v.value
}

func (v *NullableListAuditLogsEffectiveAtParameter) Set(val *ListAuditLogsEffectiveAtParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuditLogsEffectiveAtParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuditLogsEffectiveAtParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuditLogsEffectiveAtParameter(val *ListAuditLogsEffectiveAtParameter) *NullableListAuditLogsEffectiveAtParameter {
	return &NullableListAuditLogsEffectiveAtParameter{value: val, isSet: true}
}

func (v NullableListAuditLogsEffectiveAtParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuditLogsEffectiveAtParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


