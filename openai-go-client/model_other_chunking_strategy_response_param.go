/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OtherChunkingStrategyResponseParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OtherChunkingStrategyResponseParam{}

// OtherChunkingStrategyResponseParam This is returned when the chunking strategy is unknown. Typically, this is because the file was indexed before the `chunking_strategy` concept was introduced in the API.
type OtherChunkingStrategyResponseParam struct {
	// Always `other`.
	Type string `json:"type"`
}

type _OtherChunkingStrategyResponseParam OtherChunkingStrategyResponseParam

// NewOtherChunkingStrategyResponseParam instantiates a new OtherChunkingStrategyResponseParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtherChunkingStrategyResponseParam(type_ string) *OtherChunkingStrategyResponseParam {
	this := OtherChunkingStrategyResponseParam{}
	this.Type = type_
	return &this
}

// NewOtherChunkingStrategyResponseParamWithDefaults instantiates a new OtherChunkingStrategyResponseParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtherChunkingStrategyResponseParamWithDefaults() *OtherChunkingStrategyResponseParam {
	this := OtherChunkingStrategyResponseParam{}
	return &this
}

// GetType returns the Type field value
func (o *OtherChunkingStrategyResponseParam) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OtherChunkingStrategyResponseParam) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OtherChunkingStrategyResponseParam) SetType(v string) {
	o.Type = v
}

func (o OtherChunkingStrategyResponseParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OtherChunkingStrategyResponseParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *OtherChunkingStrategyResponseParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOtherChunkingStrategyResponseParam := _OtherChunkingStrategyResponseParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOtherChunkingStrategyResponseParam)

	if err != nil {
		return err
	}

	*o = OtherChunkingStrategyResponseParam(varOtherChunkingStrategyResponseParam)

	return err
}

type NullableOtherChunkingStrategyResponseParam struct {
	value *OtherChunkingStrategyResponseParam
	isSet bool
}

func (v NullableOtherChunkingStrategyResponseParam) Get() *OtherChunkingStrategyResponseParam {
	return v.value
}

func (v *NullableOtherChunkingStrategyResponseParam) Set(val *OtherChunkingStrategyResponseParam) {
	v.value = val
	v.isSet = true
}

func (v NullableOtherChunkingStrategyResponseParam) IsSet() bool {
	return v.isSet
}

func (v *NullableOtherChunkingStrategyResponseParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtherChunkingStrategyResponseParam(val *OtherChunkingStrategyResponseParam) *NullableOtherChunkingStrategyResponseParam {
	return &NullableOtherChunkingStrategyResponseParam{value: val, isSet: true}
}

func (v NullableOtherChunkingStrategyResponseParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtherChunkingStrategyResponseParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


