/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatCompletionRequestAssistantMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionRequestAssistantMessage{}

// ChatCompletionRequestAssistantMessage struct for ChatCompletionRequestAssistantMessage
type ChatCompletionRequestAssistantMessage struct {
	Content NullableChatCompletionRequestAssistantMessageContent `json:"content,omitempty"`
	// The refusal message by the assistant.
	Refusal NullableString `json:"refusal,omitempty"`
	// The role of the messages author, in this case `assistant`.
	Role string `json:"role"`
	// An optional name for the participant. Provides the model information to differentiate between participants of the same role.
	Name *string `json:"name,omitempty"`
	Audio NullableChatCompletionRequestAssistantMessageAudio `json:"audio,omitempty"`
	// The tool calls generated by the model, such as function calls.
	ToolCalls []ChatCompletionMessageToolCall `json:"tool_calls,omitempty"`
	// Deprecated
	FunctionCall NullableChatCompletionRequestAssistantMessageFunctionCall `json:"function_call,omitempty"`
}

type _ChatCompletionRequestAssistantMessage ChatCompletionRequestAssistantMessage

// NewChatCompletionRequestAssistantMessage instantiates a new ChatCompletionRequestAssistantMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionRequestAssistantMessage(role string) *ChatCompletionRequestAssistantMessage {
	this := ChatCompletionRequestAssistantMessage{}
	this.Role = role
	return &this
}

// NewChatCompletionRequestAssistantMessageWithDefaults instantiates a new ChatCompletionRequestAssistantMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionRequestAssistantMessageWithDefaults() *ChatCompletionRequestAssistantMessage {
	this := ChatCompletionRequestAssistantMessage{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatCompletionRequestAssistantMessage) GetContent() ChatCompletionRequestAssistantMessageContent {
	if o == nil || IsNil(o.Content.Get()) {
		var ret ChatCompletionRequestAssistantMessageContent
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatCompletionRequestAssistantMessage) GetContentOk() (*ChatCompletionRequestAssistantMessageContent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *ChatCompletionRequestAssistantMessage) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableChatCompletionRequestAssistantMessageContent and assigns it to the Content field.
func (o *ChatCompletionRequestAssistantMessage) SetContent(v ChatCompletionRequestAssistantMessageContent) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *ChatCompletionRequestAssistantMessage) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *ChatCompletionRequestAssistantMessage) UnsetContent() {
	o.Content.Unset()
}

// GetRefusal returns the Refusal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatCompletionRequestAssistantMessage) GetRefusal() string {
	if o == nil || IsNil(o.Refusal.Get()) {
		var ret string
		return ret
	}
	return *o.Refusal.Get()
}

// GetRefusalOk returns a tuple with the Refusal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatCompletionRequestAssistantMessage) GetRefusalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Refusal.Get(), o.Refusal.IsSet()
}

// HasRefusal returns a boolean if a field has been set.
func (o *ChatCompletionRequestAssistantMessage) HasRefusal() bool {
	if o != nil && o.Refusal.IsSet() {
		return true
	}

	return false
}

// SetRefusal gets a reference to the given NullableString and assigns it to the Refusal field.
func (o *ChatCompletionRequestAssistantMessage) SetRefusal(v string) {
	o.Refusal.Set(&v)
}
// SetRefusalNil sets the value for Refusal to be an explicit nil
func (o *ChatCompletionRequestAssistantMessage) SetRefusalNil() {
	o.Refusal.Set(nil)
}

// UnsetRefusal ensures that no value is present for Refusal, not even an explicit nil
func (o *ChatCompletionRequestAssistantMessage) UnsetRefusal() {
	o.Refusal.Unset()
}

// GetRole returns the Role field value
func (o *ChatCompletionRequestAssistantMessage) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestAssistantMessage) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ChatCompletionRequestAssistantMessage) SetRole(v string) {
	o.Role = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChatCompletionRequestAssistantMessage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestAssistantMessage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChatCompletionRequestAssistantMessage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChatCompletionRequestAssistantMessage) SetName(v string) {
	o.Name = &v
}

// GetAudio returns the Audio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatCompletionRequestAssistantMessage) GetAudio() ChatCompletionRequestAssistantMessageAudio {
	if o == nil || IsNil(o.Audio.Get()) {
		var ret ChatCompletionRequestAssistantMessageAudio
		return ret
	}
	return *o.Audio.Get()
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatCompletionRequestAssistantMessage) GetAudioOk() (*ChatCompletionRequestAssistantMessageAudio, bool) {
	if o == nil {
		return nil, false
	}
	return o.Audio.Get(), o.Audio.IsSet()
}

// HasAudio returns a boolean if a field has been set.
func (o *ChatCompletionRequestAssistantMessage) HasAudio() bool {
	if o != nil && o.Audio.IsSet() {
		return true
	}

	return false
}

// SetAudio gets a reference to the given NullableChatCompletionRequestAssistantMessageAudio and assigns it to the Audio field.
func (o *ChatCompletionRequestAssistantMessage) SetAudio(v ChatCompletionRequestAssistantMessageAudio) {
	o.Audio.Set(&v)
}
// SetAudioNil sets the value for Audio to be an explicit nil
func (o *ChatCompletionRequestAssistantMessage) SetAudioNil() {
	o.Audio.Set(nil)
}

// UnsetAudio ensures that no value is present for Audio, not even an explicit nil
func (o *ChatCompletionRequestAssistantMessage) UnsetAudio() {
	o.Audio.Unset()
}

// GetToolCalls returns the ToolCalls field value if set, zero value otherwise.
func (o *ChatCompletionRequestAssistantMessage) GetToolCalls() []ChatCompletionMessageToolCall {
	if o == nil || IsNil(o.ToolCalls) {
		var ret []ChatCompletionMessageToolCall
		return ret
	}
	return o.ToolCalls
}

// GetToolCallsOk returns a tuple with the ToolCalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestAssistantMessage) GetToolCallsOk() ([]ChatCompletionMessageToolCall, bool) {
	if o == nil || IsNil(o.ToolCalls) {
		return nil, false
	}
	return o.ToolCalls, true
}

// HasToolCalls returns a boolean if a field has been set.
func (o *ChatCompletionRequestAssistantMessage) HasToolCalls() bool {
	if o != nil && !IsNil(o.ToolCalls) {
		return true
	}

	return false
}

// SetToolCalls gets a reference to the given []ChatCompletionMessageToolCall and assigns it to the ToolCalls field.
func (o *ChatCompletionRequestAssistantMessage) SetToolCalls(v []ChatCompletionMessageToolCall) {
	o.ToolCalls = v
}

// GetFunctionCall returns the FunctionCall field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ChatCompletionRequestAssistantMessage) GetFunctionCall() ChatCompletionRequestAssistantMessageFunctionCall {
	if o == nil || IsNil(o.FunctionCall.Get()) {
		var ret ChatCompletionRequestAssistantMessageFunctionCall
		return ret
	}
	return *o.FunctionCall.Get()
}

// GetFunctionCallOk returns a tuple with the FunctionCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ChatCompletionRequestAssistantMessage) GetFunctionCallOk() (*ChatCompletionRequestAssistantMessageFunctionCall, bool) {
	if o == nil {
		return nil, false
	}
	return o.FunctionCall.Get(), o.FunctionCall.IsSet()
}

// HasFunctionCall returns a boolean if a field has been set.
func (o *ChatCompletionRequestAssistantMessage) HasFunctionCall() bool {
	if o != nil && o.FunctionCall.IsSet() {
		return true
	}

	return false
}

// SetFunctionCall gets a reference to the given NullableChatCompletionRequestAssistantMessageFunctionCall and assigns it to the FunctionCall field.
// Deprecated
func (o *ChatCompletionRequestAssistantMessage) SetFunctionCall(v ChatCompletionRequestAssistantMessageFunctionCall) {
	o.FunctionCall.Set(&v)
}
// SetFunctionCallNil sets the value for FunctionCall to be an explicit nil
func (o *ChatCompletionRequestAssistantMessage) SetFunctionCallNil() {
	o.FunctionCall.Set(nil)
}

// UnsetFunctionCall ensures that no value is present for FunctionCall, not even an explicit nil
func (o *ChatCompletionRequestAssistantMessage) UnsetFunctionCall() {
	o.FunctionCall.Unset()
}

func (o ChatCompletionRequestAssistantMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionRequestAssistantMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	if o.Refusal.IsSet() {
		toSerialize["refusal"] = o.Refusal.Get()
	}
	toSerialize["role"] = o.Role
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Audio.IsSet() {
		toSerialize["audio"] = o.Audio.Get()
	}
	if !IsNil(o.ToolCalls) {
		toSerialize["tool_calls"] = o.ToolCalls
	}
	if o.FunctionCall.IsSet() {
		toSerialize["function_call"] = o.FunctionCall.Get()
	}
	return toSerialize, nil
}

func (o *ChatCompletionRequestAssistantMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"role",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatCompletionRequestAssistantMessage := _ChatCompletionRequestAssistantMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatCompletionRequestAssistantMessage)

	if err != nil {
		return err
	}

	*o = ChatCompletionRequestAssistantMessage(varChatCompletionRequestAssistantMessage)

	return err
}

type NullableChatCompletionRequestAssistantMessage struct {
	value *ChatCompletionRequestAssistantMessage
	isSet bool
}

func (v NullableChatCompletionRequestAssistantMessage) Get() *ChatCompletionRequestAssistantMessage {
	return v.value
}

func (v *NullableChatCompletionRequestAssistantMessage) Set(val *ChatCompletionRequestAssistantMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionRequestAssistantMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionRequestAssistantMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionRequestAssistantMessage(val *ChatCompletionRequestAssistantMessage) *NullableChatCompletionRequestAssistantMessage {
	return &NullableChatCompletionRequestAssistantMessage{value: val, isSet: true}
}

func (v NullableChatCompletionRequestAssistantMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionRequestAssistantMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


