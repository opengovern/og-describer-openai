/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateThreadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateThreadRequest{}

// CreateThreadRequest struct for CreateThreadRequest
type CreateThreadRequest struct {
	// A list of [messages](/docs/api-reference/messages) to start the thread with.
	Messages []CreateMessageRequest `json:"messages,omitempty"`
	ToolResources NullableCreateThreadRequestToolResources `json:"tool_resources,omitempty"`
	// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long. 
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewCreateThreadRequest instantiates a new CreateThreadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateThreadRequest() *CreateThreadRequest {
	this := CreateThreadRequest{}
	return &this
}

// NewCreateThreadRequestWithDefaults instantiates a new CreateThreadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateThreadRequestWithDefaults() *CreateThreadRequest {
	this := CreateThreadRequest{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *CreateThreadRequest) GetMessages() []CreateMessageRequest {
	if o == nil || IsNil(o.Messages) {
		var ret []CreateMessageRequest
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateThreadRequest) GetMessagesOk() ([]CreateMessageRequest, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *CreateThreadRequest) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []CreateMessageRequest and assigns it to the Messages field.
func (o *CreateThreadRequest) SetMessages(v []CreateMessageRequest) {
	o.Messages = v
}

// GetToolResources returns the ToolResources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateThreadRequest) GetToolResources() CreateThreadRequestToolResources {
	if o == nil || IsNil(o.ToolResources.Get()) {
		var ret CreateThreadRequestToolResources
		return ret
	}
	return *o.ToolResources.Get()
}

// GetToolResourcesOk returns a tuple with the ToolResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateThreadRequest) GetToolResourcesOk() (*CreateThreadRequestToolResources, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToolResources.Get(), o.ToolResources.IsSet()
}

// HasToolResources returns a boolean if a field has been set.
func (o *CreateThreadRequest) HasToolResources() bool {
	if o != nil && o.ToolResources.IsSet() {
		return true
	}

	return false
}

// SetToolResources gets a reference to the given NullableCreateThreadRequestToolResources and assigns it to the ToolResources field.
func (o *CreateThreadRequest) SetToolResources(v CreateThreadRequestToolResources) {
	o.ToolResources.Set(&v)
}
// SetToolResourcesNil sets the value for ToolResources to be an explicit nil
func (o *CreateThreadRequest) SetToolResourcesNil() {
	o.ToolResources.Set(nil)
}

// UnsetToolResources ensures that no value is present for ToolResources, not even an explicit nil
func (o *CreateThreadRequest) UnsetToolResources() {
	o.ToolResources.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateThreadRequest) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateThreadRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateThreadRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *CreateThreadRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o CreateThreadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateThreadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if o.ToolResources.IsSet() {
		toSerialize["tool_resources"] = o.ToolResources.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableCreateThreadRequest struct {
	value *CreateThreadRequest
	isSet bool
}

func (v NullableCreateThreadRequest) Get() *CreateThreadRequest {
	return v.value
}

func (v *NullableCreateThreadRequest) Set(val *CreateThreadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateThreadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateThreadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateThreadRequest(val *CreateThreadRequest) *NullableCreateThreadRequest {
	return &NullableCreateThreadRequest{value: val, isSet: true}
}

func (v NullableCreateThreadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateThreadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


