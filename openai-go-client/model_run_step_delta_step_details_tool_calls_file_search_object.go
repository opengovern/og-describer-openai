/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RunStepDeltaStepDetailsToolCallsFileSearchObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunStepDeltaStepDetailsToolCallsFileSearchObject{}

// RunStepDeltaStepDetailsToolCallsFileSearchObject struct for RunStepDeltaStepDetailsToolCallsFileSearchObject
type RunStepDeltaStepDetailsToolCallsFileSearchObject struct {
	// The index of the tool call in the tool calls array.
	Index int32 `json:"index"`
	// The ID of the tool call object.
	Id *string `json:"id,omitempty"`
	// The type of tool call. This is always going to be `file_search` for this type of tool call.
	Type string `json:"type"`
	// For now, this is always going to be an empty object.
	FileSearch map[string]interface{} `json:"file_search"`
}

type _RunStepDeltaStepDetailsToolCallsFileSearchObject RunStepDeltaStepDetailsToolCallsFileSearchObject

// NewRunStepDeltaStepDetailsToolCallsFileSearchObject instantiates a new RunStepDeltaStepDetailsToolCallsFileSearchObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunStepDeltaStepDetailsToolCallsFileSearchObject(index int32, type_ string, fileSearch map[string]interface{}) *RunStepDeltaStepDetailsToolCallsFileSearchObject {
	this := RunStepDeltaStepDetailsToolCallsFileSearchObject{}
	this.Index = index
	this.Type = type_
	this.FileSearch = fileSearch
	return &this
}

// NewRunStepDeltaStepDetailsToolCallsFileSearchObjectWithDefaults instantiates a new RunStepDeltaStepDetailsToolCallsFileSearchObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunStepDeltaStepDetailsToolCallsFileSearchObjectWithDefaults() *RunStepDeltaStepDetailsToolCallsFileSearchObject {
	this := RunStepDeltaStepDetailsToolCallsFileSearchObject{}
	return &this
}

// GetIndex returns the Index field value
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) SetIndex(v int32) {
	o.Index = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) SetType(v string) {
	o.Type = v
}

// GetFileSearch returns the FileSearch field value
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetFileSearch() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.FileSearch
}

// GetFileSearchOk returns a tuple with the FileSearch field value
// and a boolean to check if the value has been set.
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) GetFileSearchOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.FileSearch, true
}

// SetFileSearch sets field value
func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) SetFileSearch(v map[string]interface{}) {
	o.FileSearch = v
}

func (o RunStepDeltaStepDetailsToolCallsFileSearchObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunStepDeltaStepDetailsToolCallsFileSearchObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index"] = o.Index
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["type"] = o.Type
	toSerialize["file_search"] = o.FileSearch
	return toSerialize, nil
}

func (o *RunStepDeltaStepDetailsToolCallsFileSearchObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"index",
		"type",
		"file_search",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRunStepDeltaStepDetailsToolCallsFileSearchObject := _RunStepDeltaStepDetailsToolCallsFileSearchObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRunStepDeltaStepDetailsToolCallsFileSearchObject)

	if err != nil {
		return err
	}

	*o = RunStepDeltaStepDetailsToolCallsFileSearchObject(varRunStepDeltaStepDetailsToolCallsFileSearchObject)

	return err
}

type NullableRunStepDeltaStepDetailsToolCallsFileSearchObject struct {
	value *RunStepDeltaStepDetailsToolCallsFileSearchObject
	isSet bool
}

func (v NullableRunStepDeltaStepDetailsToolCallsFileSearchObject) Get() *RunStepDeltaStepDetailsToolCallsFileSearchObject {
	return v.value
}

func (v *NullableRunStepDeltaStepDetailsToolCallsFileSearchObject) Set(val *RunStepDeltaStepDetailsToolCallsFileSearchObject) {
	v.value = val
	v.isSet = true
}

func (v NullableRunStepDeltaStepDetailsToolCallsFileSearchObject) IsSet() bool {
	return v.isSet
}

func (v *NullableRunStepDeltaStepDetailsToolCallsFileSearchObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunStepDeltaStepDetailsToolCallsFileSearchObject(val *RunStepDeltaStepDetailsToolCallsFileSearchObject) *NullableRunStepDeltaStepDetailsToolCallsFileSearchObject {
	return &NullableRunStepDeltaStepDetailsToolCallsFileSearchObject{value: val, isSet: true}
}

func (v NullableRunStepDeltaStepDetailsToolCallsFileSearchObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunStepDeltaStepDetailsToolCallsFileSearchObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


