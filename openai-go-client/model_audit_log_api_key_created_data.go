/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuditLogApiKeyCreatedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogApiKeyCreatedData{}

// AuditLogApiKeyCreatedData The payload used to create the API key.
type AuditLogApiKeyCreatedData struct {
	// A list of scopes allowed for the API key, e.g. `[\"api.model.request\"]`
	Scopes []string `json:"scopes,omitempty"`
}

// NewAuditLogApiKeyCreatedData instantiates a new AuditLogApiKeyCreatedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogApiKeyCreatedData() *AuditLogApiKeyCreatedData {
	this := AuditLogApiKeyCreatedData{}
	return &this
}

// NewAuditLogApiKeyCreatedDataWithDefaults instantiates a new AuditLogApiKeyCreatedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogApiKeyCreatedDataWithDefaults() *AuditLogApiKeyCreatedData {
	this := AuditLogApiKeyCreatedData{}
	return &this
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *AuditLogApiKeyCreatedData) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogApiKeyCreatedData) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *AuditLogApiKeyCreatedData) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *AuditLogApiKeyCreatedData) SetScopes(v []string) {
	o.Scopes = v
}

func (o AuditLogApiKeyCreatedData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogApiKeyCreatedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	return toSerialize, nil
}

type NullableAuditLogApiKeyCreatedData struct {
	value *AuditLogApiKeyCreatedData
	isSet bool
}

func (v NullableAuditLogApiKeyCreatedData) Get() *AuditLogApiKeyCreatedData {
	return v.value
}

func (v *NullableAuditLogApiKeyCreatedData) Set(val *AuditLogApiKeyCreatedData) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogApiKeyCreatedData) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogApiKeyCreatedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogApiKeyCreatedData(val *AuditLogApiKeyCreatedData) *NullableAuditLogApiKeyCreatedData {
	return &NullableAuditLogApiKeyCreatedData{value: val, isSet: true}
}

func (v NullableAuditLogApiKeyCreatedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogApiKeyCreatedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


