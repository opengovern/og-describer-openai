/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// CreateModerationRequestInputOneOfInner - struct for CreateModerationRequestInputOneOfInner
type CreateModerationRequestInputOneOfInner struct {
	CreateModerationRequestInputOneOfInnerOneOf *CreateModerationRequestInputOneOfInnerOneOf
	CreateModerationRequestInputOneOfInnerOneOf1 *CreateModerationRequestInputOneOfInnerOneOf1
}

// CreateModerationRequestInputOneOfInnerOneOfAsCreateModerationRequestInputOneOfInner is a convenience function that returns CreateModerationRequestInputOneOfInnerOneOf wrapped in CreateModerationRequestInputOneOfInner
func CreateModerationRequestInputOneOfInnerOneOfAsCreateModerationRequestInputOneOfInner(v *CreateModerationRequestInputOneOfInnerOneOf) CreateModerationRequestInputOneOfInner {
	return CreateModerationRequestInputOneOfInner{
		CreateModerationRequestInputOneOfInnerOneOf: v,
	}
}

// CreateModerationRequestInputOneOfInnerOneOf1AsCreateModerationRequestInputOneOfInner is a convenience function that returns CreateModerationRequestInputOneOfInnerOneOf1 wrapped in CreateModerationRequestInputOneOfInner
func CreateModerationRequestInputOneOfInnerOneOf1AsCreateModerationRequestInputOneOfInner(v *CreateModerationRequestInputOneOfInnerOneOf1) CreateModerationRequestInputOneOfInner {
	return CreateModerationRequestInputOneOfInner{
		CreateModerationRequestInputOneOfInnerOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateModerationRequestInputOneOfInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateModerationRequestInputOneOfInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.CreateModerationRequestInputOneOfInnerOneOf)
	if err == nil {
		jsonCreateModerationRequestInputOneOfInnerOneOf, _ := json.Marshal(dst.CreateModerationRequestInputOneOfInnerOneOf)
		if string(jsonCreateModerationRequestInputOneOfInnerOneOf) == "{}" { // empty struct
			dst.CreateModerationRequestInputOneOfInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.CreateModerationRequestInputOneOfInnerOneOf); err != nil {
				dst.CreateModerationRequestInputOneOfInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateModerationRequestInputOneOfInnerOneOf = nil
	}

	// try to unmarshal data into CreateModerationRequestInputOneOfInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.CreateModerationRequestInputOneOfInnerOneOf1)
	if err == nil {
		jsonCreateModerationRequestInputOneOfInnerOneOf1, _ := json.Marshal(dst.CreateModerationRequestInputOneOfInnerOneOf1)
		if string(jsonCreateModerationRequestInputOneOfInnerOneOf1) == "{}" { // empty struct
			dst.CreateModerationRequestInputOneOfInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.CreateModerationRequestInputOneOfInnerOneOf1); err != nil {
				dst.CreateModerationRequestInputOneOfInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.CreateModerationRequestInputOneOfInnerOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateModerationRequestInputOneOfInnerOneOf = nil
		dst.CreateModerationRequestInputOneOfInnerOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateModerationRequestInputOneOfInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateModerationRequestInputOneOfInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateModerationRequestInputOneOfInner) MarshalJSON() ([]byte, error) {
	if src.CreateModerationRequestInputOneOfInnerOneOf != nil {
		return json.Marshal(&src.CreateModerationRequestInputOneOfInnerOneOf)
	}

	if src.CreateModerationRequestInputOneOfInnerOneOf1 != nil {
		return json.Marshal(&src.CreateModerationRequestInputOneOfInnerOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateModerationRequestInputOneOfInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CreateModerationRequestInputOneOfInnerOneOf != nil {
		return obj.CreateModerationRequestInputOneOfInnerOneOf
	}

	if obj.CreateModerationRequestInputOneOfInnerOneOf1 != nil {
		return obj.CreateModerationRequestInputOneOfInnerOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableCreateModerationRequestInputOneOfInner struct {
	value *CreateModerationRequestInputOneOfInner
	isSet bool
}

func (v NullableCreateModerationRequestInputOneOfInner) Get() *CreateModerationRequestInputOneOfInner {
	return v.value
}

func (v *NullableCreateModerationRequestInputOneOfInner) Set(val *CreateModerationRequestInputOneOfInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateModerationRequestInputOneOfInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateModerationRequestInputOneOfInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateModerationRequestInputOneOfInner(val *CreateModerationRequestInputOneOfInner) *NullableCreateModerationRequestInputOneOfInner {
	return &NullableCreateModerationRequestInputOneOfInner{value: val, isSet: true}
}

func (v NullableCreateModerationRequestInputOneOfInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateModerationRequestInputOneOfInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


