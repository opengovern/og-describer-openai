/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AssistantToolsFileSearchFileSearch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssistantToolsFileSearchFileSearch{}

// AssistantToolsFileSearchFileSearch Overrides for the file search tool.
type AssistantToolsFileSearchFileSearch struct {
	// The maximum number of results the file search tool should output. The default is 20 for `gpt-4*` models and 5 for `gpt-3.5-turbo`. This number should be between 1 and 50 inclusive.  Note that the file search tool may output fewer than `max_num_results` results. See the [file search tool documentation](/docs/assistants/tools/file-search#customizing-file-search-settings) for more information. 
	MaxNumResults *int32 `json:"max_num_results,omitempty"`
	RankingOptions *FileSearchRankingOptions `json:"ranking_options,omitempty"`
}

// NewAssistantToolsFileSearchFileSearch instantiates a new AssistantToolsFileSearchFileSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssistantToolsFileSearchFileSearch() *AssistantToolsFileSearchFileSearch {
	this := AssistantToolsFileSearchFileSearch{}
	return &this
}

// NewAssistantToolsFileSearchFileSearchWithDefaults instantiates a new AssistantToolsFileSearchFileSearch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssistantToolsFileSearchFileSearchWithDefaults() *AssistantToolsFileSearchFileSearch {
	this := AssistantToolsFileSearchFileSearch{}
	return &this
}

// GetMaxNumResults returns the MaxNumResults field value if set, zero value otherwise.
func (o *AssistantToolsFileSearchFileSearch) GetMaxNumResults() int32 {
	if o == nil || IsNil(o.MaxNumResults) {
		var ret int32
		return ret
	}
	return *o.MaxNumResults
}

// GetMaxNumResultsOk returns a tuple with the MaxNumResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssistantToolsFileSearchFileSearch) GetMaxNumResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxNumResults) {
		return nil, false
	}
	return o.MaxNumResults, true
}

// HasMaxNumResults returns a boolean if a field has been set.
func (o *AssistantToolsFileSearchFileSearch) HasMaxNumResults() bool {
	if o != nil && !IsNil(o.MaxNumResults) {
		return true
	}

	return false
}

// SetMaxNumResults gets a reference to the given int32 and assigns it to the MaxNumResults field.
func (o *AssistantToolsFileSearchFileSearch) SetMaxNumResults(v int32) {
	o.MaxNumResults = &v
}

// GetRankingOptions returns the RankingOptions field value if set, zero value otherwise.
func (o *AssistantToolsFileSearchFileSearch) GetRankingOptions() FileSearchRankingOptions {
	if o == nil || IsNil(o.RankingOptions) {
		var ret FileSearchRankingOptions
		return ret
	}
	return *o.RankingOptions
}

// GetRankingOptionsOk returns a tuple with the RankingOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssistantToolsFileSearchFileSearch) GetRankingOptionsOk() (*FileSearchRankingOptions, bool) {
	if o == nil || IsNil(o.RankingOptions) {
		return nil, false
	}
	return o.RankingOptions, true
}

// HasRankingOptions returns a boolean if a field has been set.
func (o *AssistantToolsFileSearchFileSearch) HasRankingOptions() bool {
	if o != nil && !IsNil(o.RankingOptions) {
		return true
	}

	return false
}

// SetRankingOptions gets a reference to the given FileSearchRankingOptions and assigns it to the RankingOptions field.
func (o *AssistantToolsFileSearchFileSearch) SetRankingOptions(v FileSearchRankingOptions) {
	o.RankingOptions = &v
}

func (o AssistantToolsFileSearchFileSearch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssistantToolsFileSearchFileSearch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxNumResults) {
		toSerialize["max_num_results"] = o.MaxNumResults
	}
	if !IsNil(o.RankingOptions) {
		toSerialize["ranking_options"] = o.RankingOptions
	}
	return toSerialize, nil
}

type NullableAssistantToolsFileSearchFileSearch struct {
	value *AssistantToolsFileSearchFileSearch
	isSet bool
}

func (v NullableAssistantToolsFileSearchFileSearch) Get() *AssistantToolsFileSearchFileSearch {
	return v.value
}

func (v *NullableAssistantToolsFileSearchFileSearch) Set(val *AssistantToolsFileSearchFileSearch) {
	v.value = val
	v.isSet = true
}

func (v NullableAssistantToolsFileSearchFileSearch) IsSet() bool {
	return v.isSet
}

func (v *NullableAssistantToolsFileSearchFileSearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssistantToolsFileSearchFileSearch(val *AssistantToolsFileSearchFileSearch) *NullableAssistantToolsFileSearchFileSearch {
	return &NullableAssistantToolsFileSearchFileSearch{value: val, isSet: true}
}

func (v NullableAssistantToolsFileSearchFileSearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssistantToolsFileSearchFileSearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


