/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateChatCompletionRequestAudio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateChatCompletionRequestAudio{}

// CreateChatCompletionRequestAudio Parameters for audio output. Required when audio output is requested with `modalities: [\"audio\"]`. [Learn more](/docs/guides/audio). 
type CreateChatCompletionRequestAudio struct {
	// The voice the model uses to respond. Supported voices are `alloy`, `ash`, `ballad`, `coral`, `echo`, `sage`, `shimmer`, and `verse`. 
	Voice string `json:"voice"`
	// Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`, `opus`, or `pcm16`. 
	Format string `json:"format"`
}

type _CreateChatCompletionRequestAudio CreateChatCompletionRequestAudio

// NewCreateChatCompletionRequestAudio instantiates a new CreateChatCompletionRequestAudio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateChatCompletionRequestAudio(voice string, format string) *CreateChatCompletionRequestAudio {
	this := CreateChatCompletionRequestAudio{}
	this.Voice = voice
	this.Format = format
	return &this
}

// NewCreateChatCompletionRequestAudioWithDefaults instantiates a new CreateChatCompletionRequestAudio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateChatCompletionRequestAudioWithDefaults() *CreateChatCompletionRequestAudio {
	this := CreateChatCompletionRequestAudio{}
	return &this
}

// GetVoice returns the Voice field value
func (o *CreateChatCompletionRequestAudio) GetVoice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Voice
}

// GetVoiceOk returns a tuple with the Voice field value
// and a boolean to check if the value has been set.
func (o *CreateChatCompletionRequestAudio) GetVoiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Voice, true
}

// SetVoice sets field value
func (o *CreateChatCompletionRequestAudio) SetVoice(v string) {
	o.Voice = v
}

// GetFormat returns the Format field value
func (o *CreateChatCompletionRequestAudio) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *CreateChatCompletionRequestAudio) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *CreateChatCompletionRequestAudio) SetFormat(v string) {
	o.Format = v
}

func (o CreateChatCompletionRequestAudio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateChatCompletionRequestAudio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["voice"] = o.Voice
	toSerialize["format"] = o.Format
	return toSerialize, nil
}

func (o *CreateChatCompletionRequestAudio) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"voice",
		"format",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateChatCompletionRequestAudio := _CreateChatCompletionRequestAudio{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateChatCompletionRequestAudio)

	if err != nil {
		return err
	}

	*o = CreateChatCompletionRequestAudio(varCreateChatCompletionRequestAudio)

	return err
}

type NullableCreateChatCompletionRequestAudio struct {
	value *CreateChatCompletionRequestAudio
	isSet bool
}

func (v NullableCreateChatCompletionRequestAudio) Get() *CreateChatCompletionRequestAudio {
	return v.value
}

func (v *NullableCreateChatCompletionRequestAudio) Set(val *CreateChatCompletionRequestAudio) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateChatCompletionRequestAudio) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateChatCompletionRequestAudio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateChatCompletionRequestAudio(val *CreateChatCompletionRequestAudio) *NullableCreateChatCompletionRequestAudio {
	return &NullableCreateChatCompletionRequestAudio{value: val, isSet: true}
}

func (v NullableCreateChatCompletionRequestAudio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateChatCompletionRequestAudio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


