/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuditLogLoginFailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogLoginFailed{}

// AuditLogLoginFailed The details for events with this `type`.
type AuditLogLoginFailed struct {
	// The error code of the failure.
	ErrorCode *string `json:"error_code,omitempty"`
	// The error message of the failure.
	ErrorMessage *string `json:"error_message,omitempty"`
}

// NewAuditLogLoginFailed instantiates a new AuditLogLoginFailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogLoginFailed() *AuditLogLoginFailed {
	this := AuditLogLoginFailed{}
	return &this
}

// NewAuditLogLoginFailedWithDefaults instantiates a new AuditLogLoginFailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogLoginFailedWithDefaults() *AuditLogLoginFailed {
	this := AuditLogLoginFailed{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *AuditLogLoginFailed) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogLoginFailed) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *AuditLogLoginFailed) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *AuditLogLoginFailed) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *AuditLogLoginFailed) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogLoginFailed) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AuditLogLoginFailed) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *AuditLogLoginFailed) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o AuditLogLoginFailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogLoginFailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["error_message"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableAuditLogLoginFailed struct {
	value *AuditLogLoginFailed
	isSet bool
}

func (v NullableAuditLogLoginFailed) Get() *AuditLogLoginFailed {
	return v.value
}

func (v *NullableAuditLogLoginFailed) Set(val *AuditLogLoginFailed) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogLoginFailed) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogLoginFailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogLoginFailed(val *AuditLogLoginFailed) *NullableAuditLogLoginFailed {
	return &NullableAuditLogLoginFailed{value: val, isSet: true}
}

func (v NullableAuditLogLoginFailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogLoginFailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


