/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// FinetuneChatRequestInputMessagesInner - struct for FinetuneChatRequestInputMessagesInner
type FinetuneChatRequestInputMessagesInner struct {
	ChatCompletionRequestFunctionMessage *ChatCompletionRequestFunctionMessage
	ChatCompletionRequestSystemMessage *ChatCompletionRequestSystemMessage
	ChatCompletionRequestToolMessage *ChatCompletionRequestToolMessage
	ChatCompletionRequestUserMessage *ChatCompletionRequestUserMessage
	FineTuneChatCompletionRequestAssistantMessage *FineTuneChatCompletionRequestAssistantMessage
}

// ChatCompletionRequestFunctionMessageAsFinetuneChatRequestInputMessagesInner is a convenience function that returns ChatCompletionRequestFunctionMessage wrapped in FinetuneChatRequestInputMessagesInner
func ChatCompletionRequestFunctionMessageAsFinetuneChatRequestInputMessagesInner(v *ChatCompletionRequestFunctionMessage) FinetuneChatRequestInputMessagesInner {
	return FinetuneChatRequestInputMessagesInner{
		ChatCompletionRequestFunctionMessage: v,
	}
}

// ChatCompletionRequestSystemMessageAsFinetuneChatRequestInputMessagesInner is a convenience function that returns ChatCompletionRequestSystemMessage wrapped in FinetuneChatRequestInputMessagesInner
func ChatCompletionRequestSystemMessageAsFinetuneChatRequestInputMessagesInner(v *ChatCompletionRequestSystemMessage) FinetuneChatRequestInputMessagesInner {
	return FinetuneChatRequestInputMessagesInner{
		ChatCompletionRequestSystemMessage: v,
	}
}

// ChatCompletionRequestToolMessageAsFinetuneChatRequestInputMessagesInner is a convenience function that returns ChatCompletionRequestToolMessage wrapped in FinetuneChatRequestInputMessagesInner
func ChatCompletionRequestToolMessageAsFinetuneChatRequestInputMessagesInner(v *ChatCompletionRequestToolMessage) FinetuneChatRequestInputMessagesInner {
	return FinetuneChatRequestInputMessagesInner{
		ChatCompletionRequestToolMessage: v,
	}
}

// ChatCompletionRequestUserMessageAsFinetuneChatRequestInputMessagesInner is a convenience function that returns ChatCompletionRequestUserMessage wrapped in FinetuneChatRequestInputMessagesInner
func ChatCompletionRequestUserMessageAsFinetuneChatRequestInputMessagesInner(v *ChatCompletionRequestUserMessage) FinetuneChatRequestInputMessagesInner {
	return FinetuneChatRequestInputMessagesInner{
		ChatCompletionRequestUserMessage: v,
	}
}

// FineTuneChatCompletionRequestAssistantMessageAsFinetuneChatRequestInputMessagesInner is a convenience function that returns FineTuneChatCompletionRequestAssistantMessage wrapped in FinetuneChatRequestInputMessagesInner
func FineTuneChatCompletionRequestAssistantMessageAsFinetuneChatRequestInputMessagesInner(v *FineTuneChatCompletionRequestAssistantMessage) FinetuneChatRequestInputMessagesInner {
	return FinetuneChatRequestInputMessagesInner{
		FineTuneChatCompletionRequestAssistantMessage: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *FinetuneChatRequestInputMessagesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ChatCompletionRequestFunctionMessage
	err = newStrictDecoder(data).Decode(&dst.ChatCompletionRequestFunctionMessage)
	if err == nil {
		jsonChatCompletionRequestFunctionMessage, _ := json.Marshal(dst.ChatCompletionRequestFunctionMessage)
		if string(jsonChatCompletionRequestFunctionMessage) == "{}" { // empty struct
			dst.ChatCompletionRequestFunctionMessage = nil
		} else {
			if err = validator.Validate(dst.ChatCompletionRequestFunctionMessage); err != nil {
				dst.ChatCompletionRequestFunctionMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.ChatCompletionRequestFunctionMessage = nil
	}

	// try to unmarshal data into ChatCompletionRequestSystemMessage
	err = newStrictDecoder(data).Decode(&dst.ChatCompletionRequestSystemMessage)
	if err == nil {
		jsonChatCompletionRequestSystemMessage, _ := json.Marshal(dst.ChatCompletionRequestSystemMessage)
		if string(jsonChatCompletionRequestSystemMessage) == "{}" { // empty struct
			dst.ChatCompletionRequestSystemMessage = nil
		} else {
			if err = validator.Validate(dst.ChatCompletionRequestSystemMessage); err != nil {
				dst.ChatCompletionRequestSystemMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.ChatCompletionRequestSystemMessage = nil
	}

	// try to unmarshal data into ChatCompletionRequestToolMessage
	err = newStrictDecoder(data).Decode(&dst.ChatCompletionRequestToolMessage)
	if err == nil {
		jsonChatCompletionRequestToolMessage, _ := json.Marshal(dst.ChatCompletionRequestToolMessage)
		if string(jsonChatCompletionRequestToolMessage) == "{}" { // empty struct
			dst.ChatCompletionRequestToolMessage = nil
		} else {
			if err = validator.Validate(dst.ChatCompletionRequestToolMessage); err != nil {
				dst.ChatCompletionRequestToolMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.ChatCompletionRequestToolMessage = nil
	}

	// try to unmarshal data into ChatCompletionRequestUserMessage
	err = newStrictDecoder(data).Decode(&dst.ChatCompletionRequestUserMessage)
	if err == nil {
		jsonChatCompletionRequestUserMessage, _ := json.Marshal(dst.ChatCompletionRequestUserMessage)
		if string(jsonChatCompletionRequestUserMessage) == "{}" { // empty struct
			dst.ChatCompletionRequestUserMessage = nil
		} else {
			if err = validator.Validate(dst.ChatCompletionRequestUserMessage); err != nil {
				dst.ChatCompletionRequestUserMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.ChatCompletionRequestUserMessage = nil
	}

	// try to unmarshal data into FineTuneChatCompletionRequestAssistantMessage
	err = newStrictDecoder(data).Decode(&dst.FineTuneChatCompletionRequestAssistantMessage)
	if err == nil {
		jsonFineTuneChatCompletionRequestAssistantMessage, _ := json.Marshal(dst.FineTuneChatCompletionRequestAssistantMessage)
		if string(jsonFineTuneChatCompletionRequestAssistantMessage) == "{}" { // empty struct
			dst.FineTuneChatCompletionRequestAssistantMessage = nil
		} else {
			if err = validator.Validate(dst.FineTuneChatCompletionRequestAssistantMessage); err != nil {
				dst.FineTuneChatCompletionRequestAssistantMessage = nil
			} else {
				match++
			}
		}
	} else {
		dst.FineTuneChatCompletionRequestAssistantMessage = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ChatCompletionRequestFunctionMessage = nil
		dst.ChatCompletionRequestSystemMessage = nil
		dst.ChatCompletionRequestToolMessage = nil
		dst.ChatCompletionRequestUserMessage = nil
		dst.FineTuneChatCompletionRequestAssistantMessage = nil

		return fmt.Errorf("data matches more than one schema in oneOf(FinetuneChatRequestInputMessagesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(FinetuneChatRequestInputMessagesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FinetuneChatRequestInputMessagesInner) MarshalJSON() ([]byte, error) {
	if src.ChatCompletionRequestFunctionMessage != nil {
		return json.Marshal(&src.ChatCompletionRequestFunctionMessage)
	}

	if src.ChatCompletionRequestSystemMessage != nil {
		return json.Marshal(&src.ChatCompletionRequestSystemMessage)
	}

	if src.ChatCompletionRequestToolMessage != nil {
		return json.Marshal(&src.ChatCompletionRequestToolMessage)
	}

	if src.ChatCompletionRequestUserMessage != nil {
		return json.Marshal(&src.ChatCompletionRequestUserMessage)
	}

	if src.FineTuneChatCompletionRequestAssistantMessage != nil {
		return json.Marshal(&src.FineTuneChatCompletionRequestAssistantMessage)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *FinetuneChatRequestInputMessagesInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ChatCompletionRequestFunctionMessage != nil {
		return obj.ChatCompletionRequestFunctionMessage
	}

	if obj.ChatCompletionRequestSystemMessage != nil {
		return obj.ChatCompletionRequestSystemMessage
	}

	if obj.ChatCompletionRequestToolMessage != nil {
		return obj.ChatCompletionRequestToolMessage
	}

	if obj.ChatCompletionRequestUserMessage != nil {
		return obj.ChatCompletionRequestUserMessage
	}

	if obj.FineTuneChatCompletionRequestAssistantMessage != nil {
		return obj.FineTuneChatCompletionRequestAssistantMessage
	}

	// all schemas are nil
	return nil
}

type NullableFinetuneChatRequestInputMessagesInner struct {
	value *FinetuneChatRequestInputMessagesInner
	isSet bool
}

func (v NullableFinetuneChatRequestInputMessagesInner) Get() *FinetuneChatRequestInputMessagesInner {
	return v.value
}

func (v *NullableFinetuneChatRequestInputMessagesInner) Set(val *FinetuneChatRequestInputMessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFinetuneChatRequestInputMessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFinetuneChatRequestInputMessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinetuneChatRequestInputMessagesInner(val *FinetuneChatRequestInputMessagesInner) *NullableFinetuneChatRequestInputMessagesInner {
	return &NullableFinetuneChatRequestInputMessagesInner{value: val, isSet: true}
}

func (v NullableFinetuneChatRequestInputMessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinetuneChatRequestInputMessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


