/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuditLogProject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogProject{}

// AuditLogProject The project that the action was scoped to. Absent for actions not scoped to projects.
type AuditLogProject struct {
	// The project ID.
	Id *string `json:"id,omitempty"`
	// The project title.
	Name *string `json:"name,omitempty"`
}

// NewAuditLogProject instantiates a new AuditLogProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogProject() *AuditLogProject {
	this := AuditLogProject{}
	return &this
}

// NewAuditLogProjectWithDefaults instantiates a new AuditLogProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogProjectWithDefaults() *AuditLogProject {
	this := AuditLogProject{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuditLogProject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogProject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuditLogProject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuditLogProject) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuditLogProject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogProject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuditLogProject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuditLogProject) SetName(v string) {
	o.Name = &v
}

func (o AuditLogProject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogProject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAuditLogProject struct {
	value *AuditLogProject
	isSet bool
}

func (v NullableAuditLogProject) Get() *AuditLogProject {
	return v.value
}

func (v *NullableAuditLogProject) Set(val *AuditLogProject) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogProject) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogProject(val *AuditLogProject) *NullableAuditLogProject {
	return &NullableAuditLogProject{value: val, isSet: true}
}

func (v NullableAuditLogProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


