/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// RunStepDeltaStepDetailsToolCallsObjectToolCallsInner - struct for RunStepDeltaStepDetailsToolCallsObjectToolCallsInner
type RunStepDeltaStepDetailsToolCallsObjectToolCallsInner struct {
	RunStepDeltaStepDetailsToolCallsCodeObject *RunStepDeltaStepDetailsToolCallsCodeObject
	RunStepDeltaStepDetailsToolCallsFileSearchObject *RunStepDeltaStepDetailsToolCallsFileSearchObject
	RunStepDeltaStepDetailsToolCallsFunctionObject *RunStepDeltaStepDetailsToolCallsFunctionObject
}

// RunStepDeltaStepDetailsToolCallsCodeObjectAsRunStepDeltaStepDetailsToolCallsObjectToolCallsInner is a convenience function that returns RunStepDeltaStepDetailsToolCallsCodeObject wrapped in RunStepDeltaStepDetailsToolCallsObjectToolCallsInner
func RunStepDeltaStepDetailsToolCallsCodeObjectAsRunStepDeltaStepDetailsToolCallsObjectToolCallsInner(v *RunStepDeltaStepDetailsToolCallsCodeObject) RunStepDeltaStepDetailsToolCallsObjectToolCallsInner {
	return RunStepDeltaStepDetailsToolCallsObjectToolCallsInner{
		RunStepDeltaStepDetailsToolCallsCodeObject: v,
	}
}

// RunStepDeltaStepDetailsToolCallsFileSearchObjectAsRunStepDeltaStepDetailsToolCallsObjectToolCallsInner is a convenience function that returns RunStepDeltaStepDetailsToolCallsFileSearchObject wrapped in RunStepDeltaStepDetailsToolCallsObjectToolCallsInner
func RunStepDeltaStepDetailsToolCallsFileSearchObjectAsRunStepDeltaStepDetailsToolCallsObjectToolCallsInner(v *RunStepDeltaStepDetailsToolCallsFileSearchObject) RunStepDeltaStepDetailsToolCallsObjectToolCallsInner {
	return RunStepDeltaStepDetailsToolCallsObjectToolCallsInner{
		RunStepDeltaStepDetailsToolCallsFileSearchObject: v,
	}
}

// RunStepDeltaStepDetailsToolCallsFunctionObjectAsRunStepDeltaStepDetailsToolCallsObjectToolCallsInner is a convenience function that returns RunStepDeltaStepDetailsToolCallsFunctionObject wrapped in RunStepDeltaStepDetailsToolCallsObjectToolCallsInner
func RunStepDeltaStepDetailsToolCallsFunctionObjectAsRunStepDeltaStepDetailsToolCallsObjectToolCallsInner(v *RunStepDeltaStepDetailsToolCallsFunctionObject) RunStepDeltaStepDetailsToolCallsObjectToolCallsInner {
	return RunStepDeltaStepDetailsToolCallsObjectToolCallsInner{
		RunStepDeltaStepDetailsToolCallsFunctionObject: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *RunStepDeltaStepDetailsToolCallsObjectToolCallsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into RunStepDeltaStepDetailsToolCallsCodeObject
	err = newStrictDecoder(data).Decode(&dst.RunStepDeltaStepDetailsToolCallsCodeObject)
	if err == nil {
		jsonRunStepDeltaStepDetailsToolCallsCodeObject, _ := json.Marshal(dst.RunStepDeltaStepDetailsToolCallsCodeObject)
		if string(jsonRunStepDeltaStepDetailsToolCallsCodeObject) == "{}" { // empty struct
			dst.RunStepDeltaStepDetailsToolCallsCodeObject = nil
		} else {
			if err = validator.Validate(dst.RunStepDeltaStepDetailsToolCallsCodeObject); err != nil {
				dst.RunStepDeltaStepDetailsToolCallsCodeObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.RunStepDeltaStepDetailsToolCallsCodeObject = nil
	}

	// try to unmarshal data into RunStepDeltaStepDetailsToolCallsFileSearchObject
	err = newStrictDecoder(data).Decode(&dst.RunStepDeltaStepDetailsToolCallsFileSearchObject)
	if err == nil {
		jsonRunStepDeltaStepDetailsToolCallsFileSearchObject, _ := json.Marshal(dst.RunStepDeltaStepDetailsToolCallsFileSearchObject)
		if string(jsonRunStepDeltaStepDetailsToolCallsFileSearchObject) == "{}" { // empty struct
			dst.RunStepDeltaStepDetailsToolCallsFileSearchObject = nil
		} else {
			if err = validator.Validate(dst.RunStepDeltaStepDetailsToolCallsFileSearchObject); err != nil {
				dst.RunStepDeltaStepDetailsToolCallsFileSearchObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.RunStepDeltaStepDetailsToolCallsFileSearchObject = nil
	}

	// try to unmarshal data into RunStepDeltaStepDetailsToolCallsFunctionObject
	err = newStrictDecoder(data).Decode(&dst.RunStepDeltaStepDetailsToolCallsFunctionObject)
	if err == nil {
		jsonRunStepDeltaStepDetailsToolCallsFunctionObject, _ := json.Marshal(dst.RunStepDeltaStepDetailsToolCallsFunctionObject)
		if string(jsonRunStepDeltaStepDetailsToolCallsFunctionObject) == "{}" { // empty struct
			dst.RunStepDeltaStepDetailsToolCallsFunctionObject = nil
		} else {
			if err = validator.Validate(dst.RunStepDeltaStepDetailsToolCallsFunctionObject); err != nil {
				dst.RunStepDeltaStepDetailsToolCallsFunctionObject = nil
			} else {
				match++
			}
		}
	} else {
		dst.RunStepDeltaStepDetailsToolCallsFunctionObject = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.RunStepDeltaStepDetailsToolCallsCodeObject = nil
		dst.RunStepDeltaStepDetailsToolCallsFileSearchObject = nil
		dst.RunStepDeltaStepDetailsToolCallsFunctionObject = nil

		return fmt.Errorf("data matches more than one schema in oneOf(RunStepDeltaStepDetailsToolCallsObjectToolCallsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(RunStepDeltaStepDetailsToolCallsObjectToolCallsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src RunStepDeltaStepDetailsToolCallsObjectToolCallsInner) MarshalJSON() ([]byte, error) {
	if src.RunStepDeltaStepDetailsToolCallsCodeObject != nil {
		return json.Marshal(&src.RunStepDeltaStepDetailsToolCallsCodeObject)
	}

	if src.RunStepDeltaStepDetailsToolCallsFileSearchObject != nil {
		return json.Marshal(&src.RunStepDeltaStepDetailsToolCallsFileSearchObject)
	}

	if src.RunStepDeltaStepDetailsToolCallsFunctionObject != nil {
		return json.Marshal(&src.RunStepDeltaStepDetailsToolCallsFunctionObject)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *RunStepDeltaStepDetailsToolCallsObjectToolCallsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.RunStepDeltaStepDetailsToolCallsCodeObject != nil {
		return obj.RunStepDeltaStepDetailsToolCallsCodeObject
	}

	if obj.RunStepDeltaStepDetailsToolCallsFileSearchObject != nil {
		return obj.RunStepDeltaStepDetailsToolCallsFileSearchObject
	}

	if obj.RunStepDeltaStepDetailsToolCallsFunctionObject != nil {
		return obj.RunStepDeltaStepDetailsToolCallsFunctionObject
	}

	// all schemas are nil
	return nil
}

type NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner struct {
	value *RunStepDeltaStepDetailsToolCallsObjectToolCallsInner
	isSet bool
}

func (v NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner) Get() *RunStepDeltaStepDetailsToolCallsObjectToolCallsInner {
	return v.value
}

func (v *NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner) Set(val *RunStepDeltaStepDetailsToolCallsObjectToolCallsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner(val *RunStepDeltaStepDetailsToolCallsObjectToolCallsInner) *NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner {
	return &NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner{value: val, isSet: true}
}

func (v NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunStepDeltaStepDetailsToolCallsObjectToolCallsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


