/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProjectServiceAccountCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectServiceAccountCreateResponse{}

// ProjectServiceAccountCreateResponse struct for ProjectServiceAccountCreateResponse
type ProjectServiceAccountCreateResponse struct {
	Object string `json:"object"`
	Id string `json:"id"`
	Name string `json:"name"`
	// Service accounts can only have one role of type `member`
	Role string `json:"role"`
	CreatedAt int32 `json:"created_at"`
	ApiKey ProjectServiceAccountApiKey `json:"api_key"`
}

type _ProjectServiceAccountCreateResponse ProjectServiceAccountCreateResponse

// NewProjectServiceAccountCreateResponse instantiates a new ProjectServiceAccountCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectServiceAccountCreateResponse(object string, id string, name string, role string, createdAt int32, apiKey ProjectServiceAccountApiKey) *ProjectServiceAccountCreateResponse {
	this := ProjectServiceAccountCreateResponse{}
	this.Object = object
	this.Id = id
	this.Name = name
	this.Role = role
	this.CreatedAt = createdAt
	this.ApiKey = apiKey
	return &this
}

// NewProjectServiceAccountCreateResponseWithDefaults instantiates a new ProjectServiceAccountCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectServiceAccountCreateResponseWithDefaults() *ProjectServiceAccountCreateResponse {
	this := ProjectServiceAccountCreateResponse{}
	return &this
}

// GetObject returns the Object field value
func (o *ProjectServiceAccountCreateResponse) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ProjectServiceAccountCreateResponse) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ProjectServiceAccountCreateResponse) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *ProjectServiceAccountCreateResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProjectServiceAccountCreateResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProjectServiceAccountCreateResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ProjectServiceAccountCreateResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProjectServiceAccountCreateResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProjectServiceAccountCreateResponse) SetName(v string) {
	o.Name = v
}

// GetRole returns the Role field value
func (o *ProjectServiceAccountCreateResponse) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ProjectServiceAccountCreateResponse) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ProjectServiceAccountCreateResponse) SetRole(v string) {
	o.Role = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ProjectServiceAccountCreateResponse) GetCreatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ProjectServiceAccountCreateResponse) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ProjectServiceAccountCreateResponse) SetCreatedAt(v int32) {
	o.CreatedAt = v
}

// GetApiKey returns the ApiKey field value
func (o *ProjectServiceAccountCreateResponse) GetApiKey() ProjectServiceAccountApiKey {
	if o == nil {
		var ret ProjectServiceAccountApiKey
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *ProjectServiceAccountCreateResponse) GetApiKeyOk() (*ProjectServiceAccountApiKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *ProjectServiceAccountCreateResponse) SetApiKey(v ProjectServiceAccountApiKey) {
	o.ApiKey = v
}

func (o ProjectServiceAccountCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectServiceAccountCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["role"] = o.Role
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["api_key"] = o.ApiKey
	return toSerialize, nil
}

func (o *ProjectServiceAccountCreateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"id",
		"name",
		"role",
		"created_at",
		"api_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProjectServiceAccountCreateResponse := _ProjectServiceAccountCreateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProjectServiceAccountCreateResponse)

	if err != nil {
		return err
	}

	*o = ProjectServiceAccountCreateResponse(varProjectServiceAccountCreateResponse)

	return err
}

type NullableProjectServiceAccountCreateResponse struct {
	value *ProjectServiceAccountCreateResponse
	isSet bool
}

func (v NullableProjectServiceAccountCreateResponse) Get() *ProjectServiceAccountCreateResponse {
	return v.value
}

func (v *NullableProjectServiceAccountCreateResponse) Set(val *ProjectServiceAccountCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectServiceAccountCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectServiceAccountCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectServiceAccountCreateResponse(val *ProjectServiceAccountCreateResponse) *NullableProjectServiceAccountCreateResponse {
	return &NullableProjectServiceAccountCreateResponse{value: val, isSet: true}
}

func (v NullableProjectServiceAccountCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectServiceAccountCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


