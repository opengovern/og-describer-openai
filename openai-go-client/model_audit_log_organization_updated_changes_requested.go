/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuditLogOrganizationUpdatedChangesRequested type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogOrganizationUpdatedChangesRequested{}

// AuditLogOrganizationUpdatedChangesRequested The payload used to update the organization settings.
type AuditLogOrganizationUpdatedChangesRequested struct {
	// The organization title.
	Title *string `json:"title,omitempty"`
	// The organization description.
	Description *string `json:"description,omitempty"`
	// The organization name.
	Name *string `json:"name,omitempty"`
	Settings *AuditLogOrganizationUpdatedChangesRequestedSettings `json:"settings,omitempty"`
}

// NewAuditLogOrganizationUpdatedChangesRequested instantiates a new AuditLogOrganizationUpdatedChangesRequested object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogOrganizationUpdatedChangesRequested() *AuditLogOrganizationUpdatedChangesRequested {
	this := AuditLogOrganizationUpdatedChangesRequested{}
	return &this
}

// NewAuditLogOrganizationUpdatedChangesRequestedWithDefaults instantiates a new AuditLogOrganizationUpdatedChangesRequested object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogOrganizationUpdatedChangesRequestedWithDefaults() *AuditLogOrganizationUpdatedChangesRequested {
	this := AuditLogOrganizationUpdatedChangesRequested{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AuditLogOrganizationUpdatedChangesRequested) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuditLogOrganizationUpdatedChangesRequested) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuditLogOrganizationUpdatedChangesRequested) SetName(v string) {
	o.Name = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetSettings() AuditLogOrganizationUpdatedChangesRequestedSettings {
	if o == nil || IsNil(o.Settings) {
		var ret AuditLogOrganizationUpdatedChangesRequestedSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) GetSettingsOk() (*AuditLogOrganizationUpdatedChangesRequestedSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *AuditLogOrganizationUpdatedChangesRequested) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AuditLogOrganizationUpdatedChangesRequestedSettings and assigns it to the Settings field.
func (o *AuditLogOrganizationUpdatedChangesRequested) SetSettings(v AuditLogOrganizationUpdatedChangesRequestedSettings) {
	o.Settings = &v
}

func (o AuditLogOrganizationUpdatedChangesRequested) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogOrganizationUpdatedChangesRequested) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableAuditLogOrganizationUpdatedChangesRequested struct {
	value *AuditLogOrganizationUpdatedChangesRequested
	isSet bool
}

func (v NullableAuditLogOrganizationUpdatedChangesRequested) Get() *AuditLogOrganizationUpdatedChangesRequested {
	return v.value
}

func (v *NullableAuditLogOrganizationUpdatedChangesRequested) Set(val *AuditLogOrganizationUpdatedChangesRequested) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogOrganizationUpdatedChangesRequested) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogOrganizationUpdatedChangesRequested) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogOrganizationUpdatedChangesRequested(val *AuditLogOrganizationUpdatedChangesRequested) *NullableAuditLogOrganizationUpdatedChangesRequested {
	return &NullableAuditLogOrganizationUpdatedChangesRequested{value: val, isSet: true}
}

func (v NullableAuditLogOrganizationUpdatedChangesRequested) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogOrganizationUpdatedChangesRequested) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


