/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAssistantRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssistantRequest{}

// CreateAssistantRequest struct for CreateAssistantRequest
type CreateAssistantRequest struct {
	Model CreateAssistantRequestModel `json:"model"`
	// The name of the assistant. The maximum length is 256 characters. 
	Name NullableString `json:"name,omitempty"`
	// The description of the assistant. The maximum length is 512 characters. 
	Description NullableString `json:"description,omitempty"`
	// The system instructions that the assistant uses. The maximum length is 256,000 characters. 
	Instructions NullableString `json:"instructions,omitempty"`
	// A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `file_search`, or `function`. 
	Tools []AssistantObjectToolsInner `json:"tools,omitempty"`
	ToolResources NullableCreateAssistantRequestToolResources `json:"tool_resources,omitempty"`
	// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long. 
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. 
	Temperature NullableFloat32 `json:"temperature,omitempty"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or temperature but not both. 
	TopP NullableFloat32 `json:"top_p,omitempty"`
	ResponseFormat *AssistantsApiResponseFormatOption `json:"response_format,omitempty"`
}

type _CreateAssistantRequest CreateAssistantRequest

// NewCreateAssistantRequest instantiates a new CreateAssistantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssistantRequest(model CreateAssistantRequestModel) *CreateAssistantRequest {
	this := CreateAssistantRequest{}
	this.Model = model
	var temperature float32 = 1
	this.Temperature = *NewNullableFloat32(&temperature)
	var topP float32 = 1
	this.TopP = *NewNullableFloat32(&topP)
	return &this
}

// NewCreateAssistantRequestWithDefaults instantiates a new CreateAssistantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssistantRequestWithDefaults() *CreateAssistantRequest {
	this := CreateAssistantRequest{}
	var temperature float32 = 1
	this.Temperature = *NewNullableFloat32(&temperature)
	var topP float32 = 1
	this.TopP = *NewNullableFloat32(&topP)
	return &this
}

// GetModel returns the Model field value
func (o *CreateAssistantRequest) GetModel() CreateAssistantRequestModel {
	if o == nil {
		var ret CreateAssistantRequestModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *CreateAssistantRequest) GetModelOk() (*CreateAssistantRequestModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *CreateAssistantRequest) SetModel(v CreateAssistantRequestModel) {
	o.Model = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAssistantRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAssistantRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateAssistantRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateAssistantRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateAssistantRequest) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAssistantRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAssistantRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateAssistantRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateAssistantRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateAssistantRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetInstructions returns the Instructions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAssistantRequest) GetInstructions() string {
	if o == nil || IsNil(o.Instructions.Get()) {
		var ret string
		return ret
	}
	return *o.Instructions.Get()
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAssistantRequest) GetInstructionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instructions.Get(), o.Instructions.IsSet()
}

// HasInstructions returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasInstructions() bool {
	if o != nil && o.Instructions.IsSet() {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given NullableString and assigns it to the Instructions field.
func (o *CreateAssistantRequest) SetInstructions(v string) {
	o.Instructions.Set(&v)
}
// SetInstructionsNil sets the value for Instructions to be an explicit nil
func (o *CreateAssistantRequest) SetInstructionsNil() {
	o.Instructions.Set(nil)
}

// UnsetInstructions ensures that no value is present for Instructions, not even an explicit nil
func (o *CreateAssistantRequest) UnsetInstructions() {
	o.Instructions.Unset()
}

// GetTools returns the Tools field value if set, zero value otherwise.
func (o *CreateAssistantRequest) GetTools() []AssistantObjectToolsInner {
	if o == nil || IsNil(o.Tools) {
		var ret []AssistantObjectToolsInner
		return ret
	}
	return o.Tools
}

// GetToolsOk returns a tuple with the Tools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssistantRequest) GetToolsOk() ([]AssistantObjectToolsInner, bool) {
	if o == nil || IsNil(o.Tools) {
		return nil, false
	}
	return o.Tools, true
}

// HasTools returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasTools() bool {
	if o != nil && !IsNil(o.Tools) {
		return true
	}

	return false
}

// SetTools gets a reference to the given []AssistantObjectToolsInner and assigns it to the Tools field.
func (o *CreateAssistantRequest) SetTools(v []AssistantObjectToolsInner) {
	o.Tools = v
}

// GetToolResources returns the ToolResources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAssistantRequest) GetToolResources() CreateAssistantRequestToolResources {
	if o == nil || IsNil(o.ToolResources.Get()) {
		var ret CreateAssistantRequestToolResources
		return ret
	}
	return *o.ToolResources.Get()
}

// GetToolResourcesOk returns a tuple with the ToolResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAssistantRequest) GetToolResourcesOk() (*CreateAssistantRequestToolResources, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToolResources.Get(), o.ToolResources.IsSet()
}

// HasToolResources returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasToolResources() bool {
	if o != nil && o.ToolResources.IsSet() {
		return true
	}

	return false
}

// SetToolResources gets a reference to the given NullableCreateAssistantRequestToolResources and assigns it to the ToolResources field.
func (o *CreateAssistantRequest) SetToolResources(v CreateAssistantRequestToolResources) {
	o.ToolResources.Set(&v)
}
// SetToolResourcesNil sets the value for ToolResources to be an explicit nil
func (o *CreateAssistantRequest) SetToolResourcesNil() {
	o.ToolResources.Set(nil)
}

// UnsetToolResources ensures that no value is present for ToolResources, not even an explicit nil
func (o *CreateAssistantRequest) UnsetToolResources() {
	o.ToolResources.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAssistantRequest) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAssistantRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *CreateAssistantRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetTemperature returns the Temperature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAssistantRequest) GetTemperature() float32 {
	if o == nil || IsNil(o.Temperature.Get()) {
		var ret float32
		return ret
	}
	return *o.Temperature.Get()
}

// GetTemperatureOk returns a tuple with the Temperature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAssistantRequest) GetTemperatureOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Temperature.Get(), o.Temperature.IsSet()
}

// HasTemperature returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasTemperature() bool {
	if o != nil && o.Temperature.IsSet() {
		return true
	}

	return false
}

// SetTemperature gets a reference to the given NullableFloat32 and assigns it to the Temperature field.
func (o *CreateAssistantRequest) SetTemperature(v float32) {
	o.Temperature.Set(&v)
}
// SetTemperatureNil sets the value for Temperature to be an explicit nil
func (o *CreateAssistantRequest) SetTemperatureNil() {
	o.Temperature.Set(nil)
}

// UnsetTemperature ensures that no value is present for Temperature, not even an explicit nil
func (o *CreateAssistantRequest) UnsetTemperature() {
	o.Temperature.Unset()
}

// GetTopP returns the TopP field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAssistantRequest) GetTopP() float32 {
	if o == nil || IsNil(o.TopP.Get()) {
		var ret float32
		return ret
	}
	return *o.TopP.Get()
}

// GetTopPOk returns a tuple with the TopP field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAssistantRequest) GetTopPOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TopP.Get(), o.TopP.IsSet()
}

// HasTopP returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasTopP() bool {
	if o != nil && o.TopP.IsSet() {
		return true
	}

	return false
}

// SetTopP gets a reference to the given NullableFloat32 and assigns it to the TopP field.
func (o *CreateAssistantRequest) SetTopP(v float32) {
	o.TopP.Set(&v)
}
// SetTopPNil sets the value for TopP to be an explicit nil
func (o *CreateAssistantRequest) SetTopPNil() {
	o.TopP.Set(nil)
}

// UnsetTopP ensures that no value is present for TopP, not even an explicit nil
func (o *CreateAssistantRequest) UnsetTopP() {
	o.TopP.Unset()
}

// GetResponseFormat returns the ResponseFormat field value if set, zero value otherwise.
func (o *CreateAssistantRequest) GetResponseFormat() AssistantsApiResponseFormatOption {
	if o == nil || IsNil(o.ResponseFormat) {
		var ret AssistantsApiResponseFormatOption
		return ret
	}
	return *o.ResponseFormat
}

// GetResponseFormatOk returns a tuple with the ResponseFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssistantRequest) GetResponseFormatOk() (*AssistantsApiResponseFormatOption, bool) {
	if o == nil || IsNil(o.ResponseFormat) {
		return nil, false
	}
	return o.ResponseFormat, true
}

// HasResponseFormat returns a boolean if a field has been set.
func (o *CreateAssistantRequest) HasResponseFormat() bool {
	if o != nil && !IsNil(o.ResponseFormat) {
		return true
	}

	return false
}

// SetResponseFormat gets a reference to the given AssistantsApiResponseFormatOption and assigns it to the ResponseFormat field.
func (o *CreateAssistantRequest) SetResponseFormat(v AssistantsApiResponseFormatOption) {
	o.ResponseFormat = &v
}

func (o CreateAssistantRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssistantRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Instructions.IsSet() {
		toSerialize["instructions"] = o.Instructions.Get()
	}
	if !IsNil(o.Tools) {
		toSerialize["tools"] = o.Tools
	}
	if o.ToolResources.IsSet() {
		toSerialize["tool_resources"] = o.ToolResources.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Temperature.IsSet() {
		toSerialize["temperature"] = o.Temperature.Get()
	}
	if o.TopP.IsSet() {
		toSerialize["top_p"] = o.TopP.Get()
	}
	if !IsNil(o.ResponseFormat) {
		toSerialize["response_format"] = o.ResponseFormat
	}
	return toSerialize, nil
}

func (o *CreateAssistantRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssistantRequest := _CreateAssistantRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAssistantRequest)

	if err != nil {
		return err
	}

	*o = CreateAssistantRequest(varCreateAssistantRequest)

	return err
}

type NullableCreateAssistantRequest struct {
	value *CreateAssistantRequest
	isSet bool
}

func (v NullableCreateAssistantRequest) Get() *CreateAssistantRequest {
	return v.value
}

func (v *NullableCreateAssistantRequest) Set(val *CreateAssistantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssistantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssistantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssistantRequest(val *CreateAssistantRequest) *NullableCreateAssistantRequest {
	return &NullableCreateAssistantRequest{value: val, isSet: true}
}

func (v NullableCreateAssistantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssistantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


