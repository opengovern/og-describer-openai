/*
OpenAI API

The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

API version: 2.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuditLogServiceAccountCreated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogServiceAccountCreated{}

// AuditLogServiceAccountCreated The details for events with this `type`.
type AuditLogServiceAccountCreated struct {
	// The service account ID.
	Id *string `json:"id,omitempty"`
	Data *AuditLogServiceAccountCreatedData `json:"data,omitempty"`
}

// NewAuditLogServiceAccountCreated instantiates a new AuditLogServiceAccountCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogServiceAccountCreated() *AuditLogServiceAccountCreated {
	this := AuditLogServiceAccountCreated{}
	return &this
}

// NewAuditLogServiceAccountCreatedWithDefaults instantiates a new AuditLogServiceAccountCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogServiceAccountCreatedWithDefaults() *AuditLogServiceAccountCreated {
	this := AuditLogServiceAccountCreated{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuditLogServiceAccountCreated) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogServiceAccountCreated) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuditLogServiceAccountCreated) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuditLogServiceAccountCreated) SetId(v string) {
	o.Id = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AuditLogServiceAccountCreated) GetData() AuditLogServiceAccountCreatedData {
	if o == nil || IsNil(o.Data) {
		var ret AuditLogServiceAccountCreatedData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogServiceAccountCreated) GetDataOk() (*AuditLogServiceAccountCreatedData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AuditLogServiceAccountCreated) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AuditLogServiceAccountCreatedData and assigns it to the Data field.
func (o *AuditLogServiceAccountCreated) SetData(v AuditLogServiceAccountCreatedData) {
	o.Data = &v
}

func (o AuditLogServiceAccountCreated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogServiceAccountCreated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableAuditLogServiceAccountCreated struct {
	value *AuditLogServiceAccountCreated
	isSet bool
}

func (v NullableAuditLogServiceAccountCreated) Get() *AuditLogServiceAccountCreated {
	return v.value
}

func (v *NullableAuditLogServiceAccountCreated) Set(val *AuditLogServiceAccountCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogServiceAccountCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogServiceAccountCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogServiceAccountCreated(val *AuditLogServiceAccountCreated) *NullableAuditLogServiceAccountCreated {
	return &NullableAuditLogServiceAccountCreated{value: val, isSet: true}
}

func (v NullableAuditLogServiceAccountCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogServiceAccountCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


